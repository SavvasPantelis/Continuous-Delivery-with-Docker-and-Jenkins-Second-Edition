pipeline {
    agent any
    environment {
        REGISTRY_URL = "localhost:5001"
        IMAGE_NAME = "calculator"
        IMAGE_TAG = "1.0"
    }
    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Ensure gradlew is executable') {
            steps {
                sh 'chmod +x Chapter08/sample1/gradlew'
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    dir('Chapter08/sample1') {
                        sh './gradlew clean build --no-daemon'  // Ensures the JAR is built
                        sh './gradlew test jacocoTestReport --no-daemon'  // Run tests and coverage
                    }
                }
            }
        }

        stage('Code Coverage') {
            steps {
                script {
                    dir('Chapter08/sample1') {
                        sh './gradlew jacocoTestReport --no-daemon'  // Generate code coverage report
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('Chapter08/sample1') {
                        sh 'docker build -t ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG} .'
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker push ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }

        stage('Test Docker Container') {
            steps {
                script {
                    sh """
                        docker run -d --name ${IMAGE_NAME} ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}
                        sleep 5
                        curl -s localhost:8080/div?a=6\\&b=2 | grep -q '3' && echo 'pass' || echo 'fail'
                        curl -s localhost:8080/div?a=6\\&b=0 | grep -q 'error' && echo 'pass' || echo 'fail'
                    """
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    sh 'docker rm -f hazelcast || true'
                    sh 'docker rm -f calculator || true'
                }
            }
        }

        stage('Post Actions') {
            steps {
                cleanWs()
            }
        }
    }
}

