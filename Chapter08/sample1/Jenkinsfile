pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = "localhost:5001"
        DOCKER_IMAGE = "calculator"
        DOCKER_TAG = "1.0"
    }

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Ensure gradlew is executable') {
            steps {
                sh 'chmod +x Chapter09/sample1/gradlew'
            }
        }

        stage('Build JAR') {
            steps {
                dir('Chapter08/sample1') {
                    script {
                        // Build the jar from Chapter08
                        sh './gradlew clean build --no-daemon'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('Chapter09/sample1') {
                    script {
                        // Run tests including jacocoTestReport
                        sh './gradlew test jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Code Coverage') {
            steps {
                dir('Chapter09/sample1') {
                    script {
                        // Run jacocoTestReport
                        sh './gradlew jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image using Dockerfile from Chapter08
                    // Use the full path for context and Dockerfile
                    sh 'docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_TAG} -f Chapter08/sample1/Dockerfile Chapter08/sample1'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the built Docker image to registry
                    sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }

        stage('Test Docker Container') {
            steps {
                script {
                    // Remove any existing container with the name "calculator" before starting a new one
                    sh 'docker rm -f calculator || true'

                    // Run the Docker container
                    sh 'docker run -d --name calculator ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_TAG}'
                    sleep 5

                    // Correct the curl commands and test them
                    sh 'curl -s localhost:5001/div?a=6\\&b=2'  // Corrected the curl URL
                    sh 'curl -s localhost:5001/div?a=6\\&b=0'  // Corrected the curl URL
                    
                    // Clean up Docker container
                    sh 'docker rm -f calculator'
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Clean up any leftover containers
                    sh 'docker rm -f hazelcast || true'  // Optional, if hazelcast exists
                }
            }
        }

        stage('Post Actions') {
            steps {
                echo "Cleaning up after the build."
                cleanWs()  // Clean up workspace after build
            }
        }
    }
}

