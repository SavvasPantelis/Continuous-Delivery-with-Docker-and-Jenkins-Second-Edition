pipeline {
    agent any

    environment {
        REGISTRY_URL = 'localhost:5001'
        IMAGE_NAME = 'calculator'
        VERSION = '1.0'
        CALCULATOR_URL = 'http://localhost:5001'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Ensure gradlew is executable') {
            steps {
                sh 'chmod +x Chapter08/sample1/gradlew'
                sh 'chmod +x Chapter09/sample1/gradlew'  // Make gradlew executable for Chapter09 as well
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    dir('Chapter08/sample1') {
                        sh './gradlew clean build --no-daemon'
                    }
                    dir('Chapter08/sample1') {
                        sh './gradlew test jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Code Coverage') {
            steps {
                script {
                    dir('Chapter08/sample1') {
                        sh './gradlew jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('Chapter08/sample1') {
                        sh 'docker build -t ${REGISTRY_URL}/${IMAGE_NAME}:${VERSION} .'
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker push ${REGISTRY_URL}/${IMAGE_NAME}:${VERSION}"
                }
            }
        }

        stage('Run Acceptance Tests') {
            steps {
                script {
                    // Make sure to navigate to Chapter09 directory where the tests are
                    dir('Chapter09/sample1') {
                        // Run acceptance tests
                        sh './gradlew acceptanceTest --no-daemon'
                    }
                }
            }
        }

        stage('Publish Test Report') {
            steps {
                publishHTML(target: [
                    reportName: 'Acceptance Test Report',
                    reportDir: 'build/reports/tests/acceptanceTest',
                    reportFiles: 'index.html',
                    alwaysLinkToLastBuild: true
                ])
            }
        }

        stage('Test Docker Container') {
            steps {
                script {
                    sh "docker run -d --name calculator ${REGISTRY_URL}/${IMAGE_NAME}:${VERSION}"
                    sleep(5)
                    sh "curl -s ${CALCULATOR_URL}:8080/div?a=6&b=2"
                    sh "curl -s ${CALCULATOR_URL}:8080/div?a=6&b=0"
                    sh "docker rm -f calculator"
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    sh 'docker rm -f calculator || true'
                }
            }
        }

        stage('Post Actions') {
            steps {
                cleanWs()
            }
        }
    }
}

