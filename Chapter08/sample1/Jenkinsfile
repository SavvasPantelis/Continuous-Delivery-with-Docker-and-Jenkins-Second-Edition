pipeline {
    agent {
        docker {
            image 'jenkins/agent' // Containerized agent
        }
    }
    triggers {
        pollSCM('H/5 * * * *') // Poll GitHub every 5 minutes
    }
    environment {
        GITHUB_CREDENTIALS = credentials('4bbbd11b-0a17-4799-a95a-6c68f32e0e71')
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'master', credentialsId: '4bbbd11b-0a17-4799-a95a-6c68f32e0e71', url: 'https://github.com/SavvasPantelis/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
            }
        }

        stage('Detect Changes') {
            steps {
                script {
                    def changes = sh(script: "git diff --name-only HEAD~1", returnStdout: true).trim()
                    env.JAVA_CHANGED = changes.contains('.java') ? 'true' : 'false'
                }
            }
        }

        stage('Run Standard Tests') {
            steps {
                echo 'Running all standard tests...'
                sh './run_tests.sh' // Adjust to your actual test script
            }
        }

        stage('Run Java-Specific Tests') {
            when {
                expression { env.JAVA_CHANGED == 'true' }
            }
            steps {
                echo 'Java files modified, running CodeCoverage and Checkstyle...'
                sh './run_code_coverage.sh' // Replace with actual command
                sh './run_checkstyle.sh' // Replace with actual command
            }
        }
    }

    post {
        success {
            echo 'pipeline ran perfectly'
        }
        failure {
            echo 'pipeline failed'
        }
    }
}

