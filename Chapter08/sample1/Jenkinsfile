pipeline {
    agent any

    environment {
        CALCULATOR_JAR = 'Chapter08/sample1/build/libs/calculator-0.0.1-SNAPSHOT.jar' // Reference to the JAR file built from Chapter08
        REPORT_DIR = 'build/reports/tests/acceptanceTest' // Path for acceptance test reports
    }

    stages {
        stage('Checkout SCM') {
            steps {
                script {
                    // Checkout the code from the repository
                    checkout scm
                }
            }
        }

        stage('Ensure gradlew is executable') {
            steps {
                sh 'chmod +x Chapter09/sample1/gradlew'
            }
        }

        stage('Build JAR') {
            steps {
                dir('Chapter08/sample1') {
                    // Build the JAR file from Chapter08
                    sh './gradlew clean build --no-daemon'
                }
            }
        }

        stage('Run Acceptance Tests') {
            steps {
                dir('Chapter09/sample1') {
                    // Run the acceptance tests
                    sh './gradlew acceptanceTest --no-daemon'
                }
            }
        }

        stage('Publish Test Report') {
            steps {
                script {
                    // Publish the HTML report of acceptance tests in Jenkins
                    junit '**/build/reports/tests/acceptanceTest/*.xml'
                    publishHTML(target: [
                        reportName: 'Acceptance Test Report',
                        reportDir: "${env.WORKSPACE}/Chapter09/sample1/${env.REPORT_DIR}",
                        reportFiles: 'index.html',
                        keepAll: true
                    ])
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    sh 'docker rm -f calculator || true'
                    cleanWs()
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed!'
        }
        success {
            echo 'Build and tests were successful!'
        }
        failure {
            echo 'There were errors in the pipeline!'
        }
    }
}

