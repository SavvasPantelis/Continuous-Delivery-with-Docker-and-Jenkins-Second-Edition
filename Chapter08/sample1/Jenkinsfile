pipeline {
    agent any

    environment {
        REGISTRY_URL = 'localhost:5001'
        IMAGE_NAME = 'calculator'
        IMAGE_TAG = '1.0'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Ensure gradlew is executable') {
            steps {
                sh 'chmod +x Chapter09/sample1/gradlew'
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    dir('Chapter09/sample1') {
                        // Clean and build the project
                        sh './gradlew clean build --no-daemon'
                        // Run unit tests
                        sh './gradlew test jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Code Coverage') {
            steps {
                script {
                    dir('Chapter09/sample1') {
                        sh './gradlew jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('Chapter09/sample1') {
                        // Build the .jar file with bootJar task (if not already built)
                        sh './gradlew bootJar --no-daemon'

                        // Docker build
                        sh 'docker build -t ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG} -f Chapter08/sample1/Dockerfile .'
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh 'docker push ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}'
                }
            }
        }

        stage('Test Docker Container') {
            steps {
                script {
                    sh 'docker run -d --name calculator ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}'
                    sleep 5
                    sh ''' 
                        curl -s localhost:8080/div?a=6&b=2 | grep -q "3" && echo pass || echo fail
                        curl -s localhost:8080/div?a=6&b=0 | grep -q "error" && echo pass || echo fail
                    '''
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    sh 'docker rm -f calculator'
                }
            }
        }

        stage('Post Actions') {
            steps {
                cleanWs()
                echo 'Cleaning up workspace'
            }
        }
    }
}

