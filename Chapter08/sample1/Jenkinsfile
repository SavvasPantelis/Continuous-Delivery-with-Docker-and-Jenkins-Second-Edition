pipeline {
    agent any
    environment {
        REGISTRY_URL = 'localhost:5001'    // Your registry URL
        CALCULATOR_IMAGE = 'calculator'    // Image name for the calculator
        CALCULATOR_VERSION = '1.0'         // Version of the calculator image
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Run Tests') {
            steps {
                dir('Chapter08/sample1') {  // Referring to the directory where your Gradle files are
                    sh './gradlew clean test jacocoTestReport --no-daemon'
                }
            }
        }

        stage('Code Coverage') {
            when {
                branch 'master'  // Only runs on the master branch
            }
            steps {
                dir('Chapter08/sample1') {  // Referring to the directory where your Gradle files are
                    sh './gradlew jacocoTestReport --no-daemon'
                }
            }
        }

        stage('Build Docker Image') {
            when {
                branch 'master'  // Only builds Docker image on master branch
            }
            steps {
                script {
                    if (currentBuild.result == 'SUCCESS') {
                        docker.build("${REGISTRY_URL}/${CALCULATOR_IMAGE}:${CALCULATOR_VERSION}", "Chapter08/sample1")
                    }
                }
            }
        }

        stage('Push Docker Image') {
            when {
                branch 'master'  // Push image only for the master branch
            }
            steps {
                script {
                    def imageTag = "${REGISTRY_URL}/${CALCULATOR_IMAGE}:${CALCULATOR_VERSION}"
                    sh "docker push ${imageTag}"   // Push the built image to the registry
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Remove any leftover containers
                    sh 'docker rm -f hazelcast'
                    sh 'docker rm -f calculator'
                }
            }
        }
    }
    post {
        always {
            cleanWs()  // Clean workspace after build
        }
    }
}

