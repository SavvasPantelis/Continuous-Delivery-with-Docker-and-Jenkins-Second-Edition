pipeline {
    agent any

    environment {
        REGISTRY_URL = "localhost:5001"
        IMAGE_NAME = "calculator"
        IMAGE_TAG = "1.0"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Ensure gradlew is executable') {
            steps {
                sh 'chmod +x Chapter09/sample1/gradlew'
            }
        }

        stage('Run Tests') {
            steps {
                dir('Chapter09/sample1') {
                    script {
                        sh './gradlew clean build --no-daemon'
                        sh './gradlew test jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Code Coverage') {
            steps {
                dir('Chapter09/sample1') {
                    script {
                        sh './gradlew jacocoTestReport --no-daemon'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from Chapter08/sample1/Dockerfile
                    sh 'docker build -t ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG} -f ./Chapter08/sample1/Dockerfile ./Chapter08/sample1'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to the registry
                    sh 'docker push ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}'
                }
            }
        }

        stage('Test Docker Container') {
            steps {
                script {
                    // Run Docker container and test the API
                    sh 'docker run -d --name calculator ${REGISTRY_URL}/${IMAGE_NAME}:${IMAGE_TAG}'
                    sleep 5
                    sh 'curl -s localhost:5001:8080/div?a=6\\&b=2'
                    sh 'curl -s localhost:5001:8080/div?a=6\\&b=0'
                    sh 'docker rm -f calculator'
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Cleanup Docker containers if any
                    sh 'docker rm -f calculator || true'
                }
            }
        }

        stage('Post Actions') {
            steps {
                cleanWs() // Clean workspace
                echo 'Pipeline completed!'
            }
        }
    }
    
    post {
        always {
            echo 'Cleaning up after the build.'
            cleanWs() // Cleanup workspace after build
        }
    }
}

