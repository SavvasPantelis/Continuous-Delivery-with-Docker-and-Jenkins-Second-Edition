pipeline {
    agent any

    stages {
        stage('Run Tests') {
            steps {
                script {
                    if (env.BRANCH_NAME == 'main') {
                        echo 'Running CodeCoverage tests on main branch'
                        // Run CodeCoverage test
                        sh './gradlew test coverage'
                    } else if (env.BRANCH_NAME.contains('feature')) {
                        echo 'Running all tests except CodeCoverage on feature branch'
                        // Run all tests except CodeCoverage
                        sh './gradlew test'
                    } else {
                        echo 'Branch is not main or feature, failing pipeline'
                        error 'Invalid branch - pipeline failed'
                    }
                }
            }
        }
<<<<<<< HEAD

        stage('Run Standard Tests') {
            steps {
                script {
                    sh '''
                        cd Chapter08/sample1
                        chmod +x gradlew
                        ./gradlew test
                    '''
                }
            }
        }

        stage('Run Code Coverage Test') {
            when {
                expression { env.JAVA_CHANGED == 'true' }
            }
            steps {
                script {
                    sh '''
                        cd Chapter08/sample1
                        ./gradlew jacocoTestReport
                    '''
                }
            }
        }

        stage('Run JaCoCo Test Coverage Verification') {
            steps {
                script {
                    sh '''
                        cd Chapter08/sample1
                        ./gradlew jacocoTestCoverageVerification
                    '''
                }
            }
        }

        stage('Run Checkstyle Test') {
            steps {
                script {
                    sh '''
                        cd Chapter08/sample1
                        ./gradlew checkstyleMain
                    '''
                }
            }
        }

        stage('Run Checkstyle Test for Tests') {
            steps {
                script {
                    sh '''
                        cd Chapter08/sample1
                        ./gradlew checkstyleTest
                    '''
                }
            }
        }

	stage('Run JaCoCo Test Report') {
    		steps {
		dir('Chapter08/sample1') {  // Ensure we are in the correct directory
                 sh 'chmod +x gradlew'  // Ensure gradlew has execute permission
        	sh './gradlew jacocoTestReport'  // Make sure the report is generated
    }
}
}
        stage('Publish Reports') {
    steps {
        script {
            // Print out workspace to confirm location
            sh 'echo "Workspace Path: $WORKSPACE"'
            // Print the directory contents
            sh 'ls -l /var/jenkins_home/workspace/github-pipeline/Chapter08/sample1/build/reports/jacoco/test/html'
        }
        publishHTML(target: [
            reportDir: 'Chapter08/sample1/build/reports/jacoco/test/html',
            reportFiles: 'index.html',
            reportName: "JaCoCo Report"
        ])
    }
}

    }

    post {
        success {
            echo 'Pipeline ran perfectly'
        }
        failure {
            echo 'Pipeline failure'
        }
=======
>>>>>>> 12e9099 (Jenkins file modification for new assignment)
    }
}

